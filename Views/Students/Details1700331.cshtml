@using CarManufactoring.ViewModels.Group1;
@using CarManufactoring.ViewModels.Group3;
@model IEnumerable<Documents>
@{
    ViewData["Title"] = "Luis Barros";
}

<style>
    .Scroll{
        overflow-y:scroll;
        height: 150px;
        width : 100%;
    }
    .tablee{
        width: 65%;
    }
</style>

<h1><img align="right"  class="rounded-circle" src="/img/students/1700331.jpg" >@ViewData["Title"]</h1>
<h2>Group 3</h2>
<h3>Number: 1700331</h3>
<a class="btn btn-secondary " asp-controller="Groups" asp-action="Details" asp-route-number="3">Group Info & Documentation</a>
<hr />
<p><h4>Models: </h4>Car, CarConfig & Brand</p>
<hr>
<h4>What I'm going to do:</h4>
<table class="table tablee" >
    <tr>
        <th>Task</th>
        <th>Priority</th>
    </tr>
    <tr>
        <td>Show what extras are associated to the car configuration</td>
        <td class="text-danger">High</td>
    </tr>
    <tr>
        <td>Automation (related to price from extras and base price from cars to final price in car configurations and final price in sales lines) ( JavaScript required ) </td>
        <td class="text-warning">Medium</td>
    </tr>
</table>
<hr />

<h4> What I'm doing:</h4>
<ul>
    <li>Roles and permissions</li>
    <li>System automation to calculate final price on car config class, using added price from car config and base price from car</li>
</ul>
<hr />
<h4>What I've done so far: </h4>
<ul class="Scroll">
    <li>10/01 : Prevent deleting car configurations when it has sales lines associated </li>
    <li>10/01 : Prevent deleting car when it has car configurations associated</li>
    <li>10/01 : Prevent deleting brand when it has cars associated</li>
    <li>09/01 : Implemented roles and permissions (Only colaborator can create edit or delete brands, car and car configs but everyone can read the data on the DB related to those classes)</li>
    <li>09/01 : Showing not found for brand, car and car config when trying to edit, view details or delete but it was deleted by other user</li>
    <li>08/01 : Reviewed personal documentation and page</li>
    <li>08/01 : Updated group documentation </li>
    <li>08/01 : Getted rid of duplicated text on CRUD pages </li>
    <li>08/01 : Buttons on home page </li>
    <li>08/01 : Notifications when creating and before and post deleting Brand </li>
    <li>07/01 : Notifications when creating and before and post deleting Car config </li>
    <li>06/01 : Dropdown for brand when searching in car and car config index pages</li>
    <li>29/12 : Missing migration (Problem solved)</li>
    <li>20/12 : Updated personal page </li>
    <li>18/12 : Uniformization between car config and car CRUD pages  </li>
    <li>18/12 : Added Final Price to Car Config Class</li>
    <li>18/12 : Added base price on index page for car config </li>
    <li>18/12 : Updated personal page and modified some little details related to car configs pages </li>
    <li>17/12 : Showing brand in car configurations related pages since it's considered the final product</li>
    <li>17/12 : Search and pagination for car config class </li>
    <li>15/12 : Pop-ups when creating and deleting Car implemented (Layout slightly modified)</li>
    <li>14/12 : Solved problems related to populate Inspections and Testing on SeedData file (Program not running)</li>
    <li>13/12 : Solved problems related to ModelParts Module (Program not running) </li>
    <li>12/12 : Search and paging for car index page</li>
    <li>09/12 : SeedData for Car, CarConfig and Brand Classes done </li>
    <li>09/12 : Updated personal files and personal page</li>
    <li>09/12 : When creating car , the year launch is predefined as the system's year</li>
    <li>09/12 : Relations between those classes done </li>
    <li>09/12 : Brand , Car and CarConfig CRUD working perfectly </li>
    <li>09/12 : Solved problems related to migrations (all migrations in one single file) </li>
    <li>27/11 : Relation between classes Car and Car Configuration, Scaffolgind, Add Migration and DB Update </li>
    <li>26/11 : Migration and DB Updated </li>
    <li>25/11 : Scaffolding for Car and Configuration Classes</li>
    <li>8/11 to 24/11 : Group and personal view with documentation with links implemented, uploaded documents and personal photo</li>
</ul>

<hr />
<div>
<h4>Notes:</h4>
<p>I didn't do the pagination and search for brand class because in practice normally a car factory doesn't
    work with many brands, that's why I thought it was unnecessary to implement, since the user can perfectly see all the brands without scrolling too much
</p>
</div>
<hr />
<div class="row">
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Format</th>
            <th scope="col">Document</th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody>
            @foreach(Documents d in Model)
            {
                <tr>
                    <td scope="col">
                        <img class="img-fluid pdf-img" src="/documents/grupo1/img/pdf_logo.png">
                    </td>
                    <td scope="col">@d.Name</td>
                    <td>
                        <a href="@d.DocPath" target="_blank">
                            <img class="img-fluid" src="/documents/grupo1/img/download.png">
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<hr />
