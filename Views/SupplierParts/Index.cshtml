@using CarManufactoring.ViewModels.Group2
@model SupplierPartsIndexViewModel


@{
    ViewData["Title"] = "Supplier Parts";
}

<h1>@ViewData["Title"]</h1>
<link rel="stylesheet" href="~/css/SupplierLogo.css">
<br />
<div class="accordion" id="accordion">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Search Supplier Parts
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="card border-secondary mb-4">
                    <div class="card-body">
                        <form asp-action="Index" method="get">
                            <div class="mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input name="name" class="form-control" type="search" value="@Model.NameSearch" />
                            </div>
                            <div class="mb-3">
                                <label for="country" class="form-label">Country</label>
                                <select name="country" class="form-control" type="search" value="@Model.CountrySearch">
                                    <option selected="selected" disabled="disabled">Please choose a Country</option>
                                    @{
                                        List<string> CountrysAdded = new List<string>();
                                        foreach (var item in Model.SupplierPartsList.List)
                                        {
                                            CountrysAdded.Add(item.Country);

                                        }
                                        List<string> DeletedDups = CountrysAdded.Distinct().ToList();
                                        foreach (var item in DeletedDups)
                                        {
                                            <option>@item</option>

                                        }
                                    }
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input name="email" class="form-control" type="search" value="@Model.EmailSearch" />
                            </div>
                            <input type="submit" value="Search" class="btn btn-primary" />
                            <a asp-action="Index" class="btn btn-secondary">Clear Search</a>
                        </form>
                    </div>
                </div>
            </div>
       </div>
    </div>
</div>

<br/>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
<div class="btn-group" style="padding-left: 90%;">
    <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Page Size
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" asp-action="Index" asp-route-pagesize="2" >2</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-pagesize="4">4</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-pagesize="6">6</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-pagesize="8">8</a></li>
        <li><a class="dropdown-item" asp-action="Index" asp-route-pagesize="10">10</a></li>
    </ul>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => new SupplierParts().Logo)
            </th>
            <th>
                @Html.DisplayNameFor(model => new SupplierParts().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => new SupplierParts().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => new SupplierParts().Contact)
            </th>
            <th>
                @Html.DisplayNameFor(model => new SupplierParts().Country)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (SupplierParts sp in Model.SupplierPartsList.List)
        {
            <tr>
                <td>
                    @{

                        if (sp.Logo == null)
                        {
                            Random random = new Random();
                            int num = random.Next(1, 5);
                                    <div class="logo-holder logo-@(num)">
                                        <h3>@Html.DisplayFor(modelItem => sp.Name)</h3>
                                        <p>The Best</p>
                                    </div>
                        }else{
                                    <img src="@(sp.Logo)" width="150" height="150" style="margin-left:75px">
                        }
                   }
            </td>
            <td>
                    @Html.DisplayFor(modelItem => sp.Name)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => sp.Email)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => sp.Contact)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => sp.Country)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@sp.SupplierPartsId" class="btn btn-warning">Edit</a>

                    <a asp-action="Details" asp-route-id="@sp.SupplierPartsId" class="btn btn-info">Details</a>

                    @if (ViewBag.Comprar > 0){
                        <form asp-action="Index" asp-controller="SupplierPartsCarParts" method="get" style="display: inline;">
                            <input type="hidden" name="productid" value="@ViewBag.Comprar">
                            <button name="supplierid" value="@sp.SupplierPartsId" class="btn btn-success">Buy</button>
                        </form>
                    }else{
                        <form asp-action="Index" asp-controller="SupplierPartsCarParts" method="get" style="display: inline;">
                            <button name="supplierid" value="@sp.SupplierPartsId" class="btn btn-success">Product List</button>
                        </form>
                    }
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.SupplierPartsList.PagingInfo.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-pagesize="@Model.SupplierPartsList.PagingInfo.PageSize">First</a>
        </li>
        @for (int p = Model.SupplierPartsList.PagingInfo.InitialPageToShow; p <= Model.SupplierPartsList.PagingInfo.FinalPageToShow; p++)
        {
            if (p == Model.SupplierPartsList.PagingInfo.CurrentPage)
            {
                <li class="page-item active" aria-current="page"><a class="page-link" asp-action="Index" asp-route-page="@p" asp-route-pagesize="@Model.SupplierPartsList.PagingInfo.PageSize">@p</a></li>

            }
            else
            {

                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@p" asp-route-pagesize="@Model.SupplierPartsList.PagingInfo.PageSize">@p</a></li>
            }
        }
        <li class="page-item @(Model.SupplierPartsList.PagingInfo.CurrentPage == Model.SupplierPartsList.PagingInfo.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@Model.SupplierPartsList.PagingInfo.TotalPages" asp-route-pagesize="@Model.SupplierPartsList.PagingInfo.PageSize">Last</a>
        </li>
    </ul>
</nav>
